package pymontecarlo.runner.nistmonte;

import java.io.File;

import ptpshared.jsap.BaseCUI;
import ptpshared.jsap.FileStringParser;

import com.martiansoftware.jsap.FlaggedOption;
import com.martiansoftware.jsap.JSAP;
import com.martiansoftware.jsap.JSAPResult;
import com.martiansoftware.jsap.Parameter;
import com.martiansoftware.jsap.StringParser;
import com.martiansoftware.jsap.UnflaggedOption;

/**
 * Command line interface to run a simulated with NistMonte from options
 * generate by pyMonteCarlo.
 * 
 * @author ppinard
 */
public final class ProcessCUI extends BaseCUI {

    /**
     * Creates a new <code>ProcessCUI</code>.
     */
    private ProcessCUI() {
        super("NistMonte runner", "Runs a simulation generated by pyMonteCarlo with NistMonte");
    }

    /** Id for the options file option. */
    private static final String ID_OPTIONS_FILE = "optionsFile";

    /** Id for the results directory option. */
    private static final String ID_RESULTS_DIR = "resultsDir";



    @Override
    protected void registerOptions(JSAP parser) throws Exception {
        // Options input file
        StringParser optionParser =
                FileStringParser.getParser().setRequiredExtension("xml")
                        .setMustBeFile(true).setMustExist(true);
        String help = "Options XML file generated by pyMonteCarlo";
        Parameter option =
                new UnflaggedOption(ID_OPTIONS_FILE).setRequired(true)
                        .setUsageName("file").setStringParser(optionParser)
                        .setHelp(help);
        parser.registerParameter(option);

        // Results directory
        optionParser =
                FileStringParser.getParser().setMustBeDirectory(true)
                        .setMustExist(true);
        help =
                "File(s) to a multimap and/or directory(ies) containing multimaps";
        option =
                new FlaggedOption(ID_RESULTS_DIR).setUsageName("")
                        .setShortFlag('o').setLongFlag("output")
                        .setAllowMultipleDeclarations(false).setRequired(true)
                        .setStringParser(optionParser).setHelp(help);
        parser.registerParameter(option);
    }



    @Override
    protected void run(JSAPResult result) throws Exception {
        File optionsFile = result.getFile(ID_OPTIONS_FILE);
        File resultsDir = result.getFile(ID_RESULTS_DIR);

        Process process = new Process(optionsFile, resultsDir);
        process.run();
    }



    /**
     * Main entry.
     * 
     * @param args
     *            arguments passed to the program
     * @throws Exception
     *             if an exception occurs while executing the program
     */
    public static void main(String[] args) throws Exception {
        new ProcessCUI().parse(args);
    }

}
